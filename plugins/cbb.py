from pyrogram import __version__
from bot import Bot
from pyrogram.types import InlineKeyboardMarkup, InlineKeyboardButton, CallbackQuery

from config import *

@Bot.on_callback_query()
async def cb_handler(client: Bot, query: CallbackQuery):
    data = query.data
    if data == "about":
        await query.message.edit_text(
            text = f"<b></a></b>",
            disable_web_page_preview = True,
            reply_markup = InlineKeyboardMarkup(
                [
                    [
                        InlineKeyboardButton("‚Ä¢ ·¥Ñ ü·¥ès·¥á ‚Ä¢", callback_data = "close")
                    ]
                ]
            )
        )
    elif data == "close":
        await query.message.delete()
        try:
            await query.message.reply_to_message.delete()
        except:
            pass
    elif data == "buy_prem":
        await query.message.edit_text(
            text=f"üëã {query.from_user.username}\n\nüéñÔ∏è Available Plans :\n\n‚óè {PRICE1} rs For 7 Days Prime Membership\n\n‚óè {PRICE2} rs For 1 Month Prime Membership\n\n‚óè {PRICE3} rs For 3 Months Prime Membership\n\n‚óè {PRICE4} rs For 6 Months Prime Membership\n\n‚óè {PRICE5} rs For 1 Year Prime Membership\n\n\nüíµ UPI ID -  {UPI_ID}\n\n(Tap to copy UPI Id)\n\n\nüì∏ QR - ·¥Ñ ü…™·¥Ñ·¥ã  ú·¥á Ä·¥á ·¥õ·¥è Íú±·¥Ñ·¥Ä…¥ ({UPI_IMAGE_URL})\n\n‚Ä¢ <u>“ì…™ Äs·¥õ s·¥õ·¥á·¥ò</u> : ·¥ò·¥Ä è ·¥õ ú·¥á ·¥Ä·¥ç·¥è·¥ú…¥·¥õ ·¥Ä·¥Ñ·¥Ñ·¥è Ä·¥Ö…™…¥…¢ ·¥õ·¥è  è·¥è·¥ú Ä “ì·¥Ä·¥†·¥è Ä…™·¥õ·¥á ·¥ò ü·¥Ä…¥ ·¥õ·¥è ·¥õ ú…™s <code>rohit162@fam</code> ·¥ú·¥ò…™ …™·¥Ö.\n ‚Ä¢ <u>seco…¥·¥Ö s·¥õ·¥á·¥ò</u> : ·¥õ·¥Ä·¥ã·¥á ·¥Ä s·¥Ñ Ä·¥á·¥á…¥s ú·¥è·¥õ ·¥è“ì  è·¥è·¥ú Ä ·¥ò·¥Ä è·¥ç·¥á…¥·¥õ ·¥Ä…¥·¥Ö s ú·¥Ä Ä·¥á …™·¥õ ·¥Ö…™ Ä·¥á·¥Ñ·¥õ ü è  ú·¥á Ä·¥á: @sewxiy \n‚Ä¢ <u>·¥Ä ü·¥õ·¥á Ä…¥·¥Ä·¥õ…™·¥†·¥á s·¥õ·¥á·¥ò</u> : ·¥è Ä ·¥ú·¥ò ü·¥è·¥Ä·¥Ö ·¥õ ú·¥á s·¥Ñ Ä·¥á·¥á…¥s ú·¥è·¥õ  ú·¥á Ä·¥á ·¥Ä…¥·¥Ö  Ä·¥á·¥ò ü è ·¥°…™·¥õ ú ·¥õ ú·¥á /bought ·¥Ñ·¥è·¥ç·¥ç·¥Ä…¥·¥Ö.\n\nY·¥è·¥ú Ä <ul>·¥ò Ä·¥á·¥ç…™·¥ú·¥ç ·¥ò ü·¥Ä…¥</ul> ·¥°…™ ü ü  ô·¥á ·¥Ä·¥Ñ·¥õ…™·¥†·¥Ä·¥õ·¥á·¥Ö ·¥Ä“ì·¥õ·¥á Ä ·¥†·¥á Ä…™“ì…™·¥Ñ·¥Ä·¥õ…™·¥è…¥</b>",
            disable_web_page_preview=True,
            reply_markup = InlineKeyboardMarkup(
                [   
                    [
                        InlineKeyboardButton("‚Ä¢ s·¥á…¥·¥Ö ·¥ò·¥Ä è·¥ç·¥á…¥·¥õ s·¥Ñ Ä·¥á·¥Äs ú·¥è·¥õ ‚Ä¢", url=(SCREENSHOT_URL))
                    ],
                    [
                        InlineKeyboardButton("‚Ä¢ ·¥Ñ ü·¥ès·¥á ‚Ä¢", callback_data = "close")
                    ]
                ]
            )

@Client.on_message(filters.command("bought") & filters.private)
            async def bought(client, message):
    msg = await message.reply('Wait im checking...')
    replyed = message.reply_to_message
    if not replyed:
        await msg.edit("<b>Please reply with the screenshot of your payment for the premium purchase to proceed.\n\nFor example, first upload your screenshot, then reply to it using the '/bought' command</b>")
    if replyed and replyed.photo:
        await client.send_photo(
            photo=replyed.photo.file_id,
            chat_id=PAYMENT_LOGS,
            caption=f'<b>User - {message.from_user.mention}\nUser id - <code>{message.from_user.id}</code>\nusername - <code>{message.from_user.username}</code>\nUser Name - <code>{message.from_user.first_name}</code></b>',
            reply_markup=InlineKeyboardMarkup(
                [
                    
                    [
                        InlineKeyboardButton(
                            "‚Ä¢ ·¥Ñ ü·¥ès·¥á ‚Ä¢", callback_data="close_data"
                        )
                    ]
                    
                ]
            )
        )
        await msg.edit_text('<b>Your screenshot has been sent to Admins</b>')
            )
